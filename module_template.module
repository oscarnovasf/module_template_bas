<?php

/**
 * @file
 * module_template.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Render\Markup;

use Drupal\module_template\lib\general\MarkdownParser;

/**
 * Implements hook_help().
 */
function module_template_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {

    case 'help.page.module_template':
      /* Añado el contenido del archivo README.md a la ayuda del módulo */
      $parser = new MarkdownParser();

      $module_path = \Drupal::service('extension.path.resolver')
        ->getPath('module', "module_template");

      $readme_ruta = $module_path . "/README.md";
      $contenido = '';
      if (file_exists($readme_ruta)) {
        $contenido = file_get_contents($readme_ruta);
        $contenido = Markup::create($parser->text($contenido));
      }

      $template_path = $module_path . "/templates/custom/help.html.twig";
      $template = file_get_contents($template_path);
      $build = [
        'description' => [
          '#type' => 'inline_template',
          '#template' => $template,
          '#context' => [
            'readme' => $contenido,
          ],
        ],
      ];
      return $build;

    default:
  }
}

/**
 * Implements hook_page_attachments().
 */
function module_template_page_attachments(array &$attachments) {
  /* Añadir el CSS y JS a toda la web */
  $attachments['#attached']['library'][] = 'module_template/global_libraries';
}

/**
 * Implements hook_mail().
 */
function module_template_mail(string $key, array &$message, array $params) {
  /* Cabeceras */
  $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
  $message['from'] = \Drupal::config('system.site')->get('name') . '<' . \Drupal::config('system.site')->get('mail') . '>';

  /* Copias del mensaje */
  if (isset($params['Cc']) and !is_null($params['Cc'])) {
    $message['headers']['Cc'] = $params['Cc'];
  }
  if (isset($params['Bcc']) and !is_null($params['Bcc'])) {
    $message['headers']['Bcc'] = $params['Bcc'];
  }

  /* Datos comunes a todos los envíos */
  $message['reply-to'] = $message['from'];
  $message['subject'] = $params['subject'];
  $message['body'][] = Markup::create($params['message']);

  /* Compruebo si el mensaje tiene adjuntos */
  if (isset($params['attachments'])) {
    /* Solución para los adjuntos duplicados en Outlook. */
    $message['params']['attachments'] = [];

    foreach ($params['attachments'] as $attachment) {
      $message['params']['attachments'][] = [
        'filepath' => $attachment['filepath'],
        'filename' => $attachment['filename'],
        'filemime' => $attachment['filemime'],
      ];
    }
  }
}
